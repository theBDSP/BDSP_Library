#pragma once

namespace bdsp
{
	namespace dsp
	{
		namespace DistortionTypes
		{
			static const juce::Array<double> TriFoldCompensationData = { 0.562789,0.592643,0.622142,0.641486,0.647435,0.650113,0.651499,0.647282,0.64044,0.630425,0.617556,0.608108,0.593816,0.580431,0.572852,0.5594,0.551798,0.542131,0.538037,0.532396,0.530978,0.524266,0.521258,0.521117,0.517401,0.514667,0.513111,0.509164,0.503426,0.501605,0.494374,0.492055,0.485813,0.480794,0.476816,0.468043,0.462583,0.459394,0.45762,0.452497,0.449261,0.44763,0.441055,0.4369,0.434797,0.430808,0.424859,0.422637,0.421535,0.417333,0.412862,0.415375,0.40962,0.408819,0.40153,0.398935,0.398837,0.394944,0.394126,0.388477,0.384644,0.38182,0.381953,0.380269,0.380185,0.373676,0.371563,0.370948,0.368775,0.367523,0.363566,0.362501,0.358971,0.361395,0.355943,0.353358,0.354371,0.353003,0.346412,0.345467,0.344015,0.3428,0.343272,0.339862,0.340206,0.340637,0.336194,0.335353,0.332926,0.330723,0.327721,0.326468,0.327282,0.325568,0.322948,0.324945,0.323101,0.321064,0.319749,0.318185,0.31709 };
			static const unsigned char TriFoldPathData[] = { 110,109,0,0,128,191,164,153,25,63,108,164,112,125,191,253,210,13,63,108,72,225,122,191,86,12,2,63,108,236,81,120,191,94,139,236,62,108,144,194,117,191,14,254,212,62,108,52,51,115,191,194,112,189,62,108,216,163,112,191,114,227,165,62,108,124,20,110,191, 36,86,142,62,108,32,133,107,191,171,145,109,62,108,196,245,104,191,13,119,62,62,108,104,102,102,191,113,92,15,62,108,12,215,99,191,169,131,192,61,108,176,71,97,191,221,156,68,61,108,84,184,94,191,166,38,3,59,108,248,40,92,191,8,56,52,189,108,156,153, 89,191,62,81,184,189,108,64,10,87,191,60,67,11,190,108,228,122,84,191,217,93,58,190,108,136,235,81,191,117,120,105,190,108,44,92,79,191,137,73,140,190,108,208,204,76,191,216,214,163,190,108,116,61,74,191,38,100,187,190,108,24,174,71,191,116,241,210,190, 108,188,30,69,191,195,126,234,190,108,96,143,66,191,9,6,1,191,108,4,0,64,191,176,204,12,191,108,168,112,61,191,87,147,24,191,108,76,225,58,191,255,89,36,191,108,240,81,56,191,166,32,48,191,108,148,194,53,191,76,231,59,191,108,56,51,51,191,245,173,71, 191,108,220,163,48,191,154,116,83,191,108,128,20,46,191,66,59,95,191,108,36,133,43,191,241,1,107,191,108,200,245,40,191,152,200,118,191,108,108,102,38,191,194,112,125,191,108,16,215,35,191,26,170,113,191,108,180,71,33,191,117,227,101,191,108,88,184,30, 191,206,28,90,191,108,252,40,28,191,36,86,78,191,108,160,153,25,191,126,143,66,191,108,68,10,23,191,215,200,54,191,108,232,122,20,191,47,2,43,191,108,140,235,17,191,137,59,31,191,108,48,92,15,191,225,116,19,191,108,212,204,12,191,60,174,7,191,108,120, 61,10,191,43,207,247,190,108,28,174,7,191,219,65,224,190,108,192,30,5,191,141,180,200,190,108,100,143,2,191,59,39,177,190,108,8,0,0,191,236,153,153,190,108,88,225,250,190,157,12,130,190,108,160,194,245,190,158,254,84,190,108,232,163,240,190,1,228,37, 190,108,48,133,235,190,200,146,237,189,108,120,102,230,190,142,93,143,189,108,192,71,225,190,83,161,196,188,108,8,41,220,190,149,51,180,60,108,80,10,215,190,31,66,139,61,108,152,235,209,190,88,119,233,61,108,224,204,204,190,73,214,35,62,108,40,174,199, 190,230,240,82,62,108,112,143,194,190,193,5,129,62,108,184,112,189,190,16,147,152,62,108,0,82,184,190,94,32,176,62,108,72,51,179,190,173,173,199,62,108,144,20,174,190,250,58,223,62,108,216,245,168,190,73,200,246,62,108,32,215,163,190,204,42,7,63,108, 104,184,158,190,115,241,18,63,108,176,153,153,190,27,184,30,63,108,248,122,148,190,195,126,42,63,108,64,92,143,190,104,69,54,63,108,136,61,138,190,17,12,66,63,108,208,30,133,190,184,210,77,63,108,24,0,128,190,95,153,89,63,108,191,194,117,190,9,96,101, 63,108,78,133,107,190,179,38,113,63,108,221,71,97,190,93,237,124,63,108,108,10,87,190,250,75,119,63,108,251,204,76,190,88,133,107,63,108,138,143,66,190,174,190,95,63,108,25,82,56,190,4,248,83,63,108,168,20,46,190,92,49,72,63,108,55,215,35,190,180,106, 60,63,108,198,153,25,190,12,164,48,63,108,85,92,15,190,99,221,36,63,108,228,30,5,190,187,22,25,63,108,231,194,245,189,20,80,13,63,108,6,72,225,189,107,137,1,63,108,37,205,204,189,133,133,235,62,108,68,82,184,189,54,248,211,62,108,99,215,163,189,230,106, 188,62,108,130,92,143,189,150,221,164,62,108,65,195,117,189,71,80,141,62,108,126,205,76,189,236,133,107,62,108,187,215,35,189,76,107,60,62,108,241,195,245,188,172,80,13,62,108,108,216,163,188,24,108,188,61,108,206,217,35,188,174,109,60,61,108,164,240, 48,181,37,123,75,54,108,70,212,35,60,82,103,60,189,108,168,213,163,60,233,104,188,189,108,45,193,245,60,20,79,13,190,108,89,214,35,61,180,105,60,190,108,28,204,76,61,85,132,107,190,108,223,193,117,61,123,79,141,190,108,209,91,143,61,204,220,164,190,108, 178,214,163,61,28,106,188,190,108,147,81,184,61,107,247,211,190,108,116,204,204,61,186,132,235,190,108,85,71,225,61,5,137,1,191,108,54,194,245,61,173,79,13,191,108,140,30,5,62,86,22,25,191,108,253,91,15,62,253,220,36,191,108,110,153,25,62,166,163,48, 191,108,223,214,35,62,77,106,60,191,108,80,20,46,62,247,48,72,191,108,193,81,56,62,161,247,83,191,108,50,143,66,62,73,190,95,191,108,163,204,76,62,242,132,107,191,108,20,10,87,62,153,75,119,191,108,133,71,97,62,193,237,124,191,108,246,132,107,62,20,39, 113,191,108,103,194,117,62,107,96,101,191,108,216,255,127,62,197,153,89,191,108,164,30,133,62,29,211,77,191,108,92,61,138,62,118,12,66,191,108,20,92,143,62,206,69,54,191,108,204,122,148,62,40,127,42,191,108,132,153,153,62,129,184,30,191,108,60,184,158, 62,217,241,18,191,108,244,214,163,62,50,43,7,191,108,172,245,168,62,21,201,246,190,108,100,20,174,62,198,59,223,190,108,28,51,179,62,121,174,199,190,108,212,81,184,62,43,33,176,190,108,140,112,189,62,219,147,152,190,108,68,143,194,62,141,6,129,190,108, 252,173,199,62,125,242,82,190,108,180,204,204,62,224,215,35,190,108,108,235,209,62,135,122,233,189,108,36,10,215,62,78,69,139,189,108,220,40,220,62,79,64,180,188,108,148,71,225,62,233,148,196,60,108,76,102,230,62,116,90,143,61,108,4,133,235,62,174,143, 237,61,108,188,163,240,62,116,226,37,62,108,116,194,245,62,17,253,84,62,108,44,225,250,62,215,11,130,62,108,228,255,255,62,37,153,153,62,108,78,143,2,63,115,38,177,62,108,170,30,5,63,195,179,200,62,108,6,174,7,63,17,65,224,62,108,98,61,10,63,95,206,247, 62,108,190,204,12,63,214,173,7,63,108,26,92,15,63,124,116,19,63,108,118,235,17,63,34,59,31,63,108,210,122,20,63,202,1,43,63,108,46,10,23,63,112,200,54,63,108,138,153,25,63,30,143,66,63,108,230,40,28,63,198,85,78,63,108,66,184,30,63,109,28,90,63,108,158, 71,33,63,18,227,101,63,108,250,214,35,63,188,169,113,63,108,86,102,38,63,114,112,125,63,108,178,245,40,63,242,200,118,63,108,14,133,43,63,79,2,107,63,108,106,20,46,63,168,59,95,63,108,198,163,48,63,0,117,83,63,108,34,51,51,63,89,174,71,63,108,126,194, 53,63,179,231,59,63,108,218,81,56,63,11,33,48,63,108,54,225,58,63,99,90,36,63,108,146,112,61,63,189,147,24,63,108,238,255,63,63,22,205,12,63,108,74,143,66,63,110,6,1,63,108,166,30,69,63,143,127,234,62,108,2,174,71,63,65,242,210,62,108,94,61,74,63,242, 100,187,62,108,186,204,76,63,163,215,163,62,108,22,92,79,63,85,74,140,62,108,114,235,81,63,13,122,105,62,108,206,122,84,63,112,95,58,62,108,42,10,87,63,212,68,11,62,108,134,153,89,63,110,84,184,61,108,226,40,92,63,102,62,52,61,108,62,184,94,63,202,192, 2,187,108,154,71,97,63,129,150,68,189,108,246,214,99,63,122,128,192,189,108,82,102,102,63,218,90,15,190,108,174,245,104,63,119,117,62,190,108,10,133,107,63,20,144,109,190,108,102,20,110,63,88,85,142,190,108,194,163,112,63,167,226,165,190,108,30,51,115, 63,245,111,189,190,108,122,194,117,63,67,253,212,190,108,214,81,120,63,146,138,236,190,108,50,225,122,63,240,11,2,191,108,142,112,125,63,151,210,13,191,108,234,255,127,63,63,153,25,191,101,0,0 };
			/**
			 * Aggressive Wavefolding Distortion.
			 * https://www.desmos.com/calculator/272sexydeo
			 */
			template<typename T>
			struct TriFold : public DistortionTypeBase<T>
			{
				TriFold()
					:DistortionTypeBase<T>(TriFoldCompensationData, TriFoldPathData, sizeof(TriFoldPathData))
				{
				}
				T processSample(T in, T amt, bool isScaled) override
				{
					T a = (9 * amt + 1) / 2;

					return 2*asin(sin(a*PI*in))/PI * (isScaled ? DistortionTypeBase<T>::CompensationGain.processSample(amt) : 1);
				}

				inline static const juce::String Name{ "Tri Fold" };
			};


		}

	} //dsp namespace
} //bdsp namespace

